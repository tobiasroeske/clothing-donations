/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterImport } from './routes/register'
import { Route as PrivacyPolicyImport } from './routes/privacy-policy'
import { Route as ImprintImport } from './routes/imprint'
import { Route as R404Import } from './routes/404'
import { Route as IndexImport } from './routes/index'
import { Route as SuccessDonationIdImport } from './routes/success.$donationId'

// Create/Update Routes

const RegisterRoute = RegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const PrivacyPolicyRoute = PrivacyPolicyImport.update({
  id: '/privacy-policy',
  path: '/privacy-policy',
  getParentRoute: () => rootRoute,
} as any)

const ImprintRoute = ImprintImport.update({
  id: '/imprint',
  path: '/imprint',
  getParentRoute: () => rootRoute,
} as any)

const R404Route = R404Import.update({
  id: '/404',
  path: '/404',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SuccessDonationIdRoute = SuccessDonationIdImport.update({
  id: '/success/$donationId',
  path: '/success/$donationId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/404': {
      id: '/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof R404Import
      parentRoute: typeof rootRoute
    }
    '/imprint': {
      id: '/imprint'
      path: '/imprint'
      fullPath: '/imprint'
      preLoaderRoute: typeof ImprintImport
      parentRoute: typeof rootRoute
    }
    '/privacy-policy': {
      id: '/privacy-policy'
      path: '/privacy-policy'
      fullPath: '/privacy-policy'
      preLoaderRoute: typeof PrivacyPolicyImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/success/$donationId': {
      id: '/success/$donationId'
      path: '/success/$donationId'
      fullPath: '/success/$donationId'
      preLoaderRoute: typeof SuccessDonationIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/imprint': typeof ImprintRoute
  '/privacy-policy': typeof PrivacyPolicyRoute
  '/register': typeof RegisterRoute
  '/success/$donationId': typeof SuccessDonationIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/imprint': typeof ImprintRoute
  '/privacy-policy': typeof PrivacyPolicyRoute
  '/register': typeof RegisterRoute
  '/success/$donationId': typeof SuccessDonationIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/imprint': typeof ImprintRoute
  '/privacy-policy': typeof PrivacyPolicyRoute
  '/register': typeof RegisterRoute
  '/success/$donationId': typeof SuccessDonationIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/404'
    | '/imprint'
    | '/privacy-policy'
    | '/register'
    | '/success/$donationId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/404'
    | '/imprint'
    | '/privacy-policy'
    | '/register'
    | '/success/$donationId'
  id:
    | '__root__'
    | '/'
    | '/404'
    | '/imprint'
    | '/privacy-policy'
    | '/register'
    | '/success/$donationId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  R404Route: typeof R404Route
  ImprintRoute: typeof ImprintRoute
  PrivacyPolicyRoute: typeof PrivacyPolicyRoute
  RegisterRoute: typeof RegisterRoute
  SuccessDonationIdRoute: typeof SuccessDonationIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  R404Route: R404Route,
  ImprintRoute: ImprintRoute,
  PrivacyPolicyRoute: PrivacyPolicyRoute,
  RegisterRoute: RegisterRoute,
  SuccessDonationIdRoute: SuccessDonationIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/404",
        "/imprint",
        "/privacy-policy",
        "/register",
        "/success/$donationId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/404": {
      "filePath": "404.tsx"
    },
    "/imprint": {
      "filePath": "imprint.tsx"
    },
    "/privacy-policy": {
      "filePath": "privacy-policy.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/success/$donationId": {
      "filePath": "success.$donationId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
